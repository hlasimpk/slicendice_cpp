
    // string atomic_data = "[[-5.331, -6.838, 4.293], [-5.209, -4.818, 1.047], [-3.537, -6.765, -1.802], [-2.142, -5.096, -4.951],[0.419, -5.852, -7.696], [1.996, -4.28, -10.801], [1.251, -6.348, -13.963], [3.524, -4.3, -16.251],[6.384, -1.805, -15.917], [7.526, 0.311, -18.909], [10.115, 3.115, -19.293], [13.053, 3.747, -16.902],[13.205, 3.492, -13.063], [13.155, 7.371, -12.898], [10.348, 7.661, -15.53], [8.163, 4.539, -15.353],[4.557, 3.656, -16.183], [3.044, 0.989, -13.916], [-0.02, -1.015, -14.963], [-1.55, -2.128, -11.634],[-4.246, -4.226, -9.978], [-5.554, -3.543, -6.468], [-7.012, -7.04, -6.216], [-8.916, -7.001, -2.913],[-9.491, -5.587, 0.521], [-10.071, -8.424, 3.011], [-12.52, -7.667, 5.904], [-10.84, -5.559, 8.614],[-10.682, -6.888, 12.18], [-12.707, -4.617, 14.493], [-10.514, -1.954, 16.179], [-7.762, -0.985, 13.667],[-7.762, 2.845, 13.714], [-7.793, 5.068, 10.633], [-4.343, 6.862, 10.784], [-5.87, 10.218, 9.714],[-8.973, 10.197, 11.944], [-9.441, 13.764, 13.302], [-7.3, 15.453, 10.597], [-8.919, 18.599, 9.027],[-9.029, 16.702, 5.681], [-7.972, 13.184, 4.654], [-8.481, 11.304, 1.382], [-8.153, 7.687, 0.366],[-6.391, 7.655, -3.037], [-4.927, 5.241, -5.571], [-1.23, 6.185, -5.524], [2.308, 4.747, -5.802],[5.292, 4.678, -3.411], [7.374, 7.689, -4.505], [10.174, 7.628, -1.875], [12.257, 5.048, 0.016],[10.367, 6.288, 3.156], [7.014, 5.074, 1.69], [5.575, 8.546, 0.868], [2.894, 8.564, -1.846],[3.565, 10.21, -5.225], [0.941, 12.023, -7.254], [-2.396, 10.099, -6.909], [-3.861, 8.433, -9.996],[-7.236, 9.426, -8.448], [-9.132, 10.103, -5.205], [-11.765, 7.596, -3.955], [-13.273, 9.298, -0.842],[-12.875, 11.527, 2.254], [-12.012, 9.507, 5.379], [-11.016, 11.992, 8.181], [-14.361, 11.377, 10.023],[-14.017, 7.549, 9.898], [-12.564, 6.158, 13.16], [-11.632, 2.65, 11.925], [-10.172, 1.027, 8.793],[-13.393, -1.07, 8.676], [-15.404, 2.172, 8.137], [-12.763, 3.338, 5.566], [-13.138, -0.026, 3.728],[-16.961, 0.272, 3.682], [-16.698, 3.786, 2.148], [-14.127, 2.554, -0.446], [-16.397, -0.419, -1.386],[-19.364, 2.007, -1.805], [-17.322, 4.085, -4.341], [-15.249, 1.326, -6.106], [-15.458, -2.41, -6.813],[-12.387, -4.642, -6.648], [-10.288, -5.337, -8.645], [-9.277, -1.664, -9.13], [-7.185, -1.548, -12.318],[-5.299, 1.241, -14.091], [-2.034, 3.007, -14.92], [0.141, 5.417, -12.876], [3.359, 7.269, -13.8],[6.415, 7.489, -11.555], [8.582, 10.576, -12.237], [11.418, 10.982, -9.738], [14.55, 9.432, -8.196],[14.836, 5.731, -9.009], [13.658, 3.471, -6.155], [16.51, 1.012, -7.025], [16.493, -0.586, -3.499],[12.755, -0.474, -2.682], [10.1, -2.162, -4.829], [7.478, 0.098, -6.351], [4.031, -0.314, -4.854],[0.765, 0.898, -6.347], [-2.05, 0.691, -3.776], [-4.416, 2.574, -1.468], [-2.921, 5.635, 0.276],[-4.178, 8.124, 2.874], [-3.251, 11.838, 2.377], [-4.425, 15.41, 3.392], [-4.483, 16.642, -0.283],[-6.678, 15.221, -3.123], [-3.809, 15.472, -5.704], [-0.017, 16.081, -5.848], [2.896, 14.708, -3.78],[2.193, 14.589, -0.03], [4.935, 14.221, 2.649], [2.068, 12.929, 4.9], [0.747, 10.61, 2.147],[1.319, 6.934, 3.118], [0.087, 3.436, 2.233], [-3.024, 2.402, 4.162], [-2.189, -0.006, 7.047],[-2.381, -3.709, 6.063], [-1.266, -3.018, 2.433], [0.61, -5.906, 0.757], [2.305, -5.097, -2.559],[3.357, -7.726, -5.108], [6.864, -7.484, -6.573], [6.918, -5.16, -9.607], [7.95, -7.062, -12.805],[11.173, -5.944, -14.577], [10.562, -3.338, -17.343], [9.324, -4.909, -20.598], [12.197, -4.144, -22.943],[10.464, -4.299, -26.3], [13.383, -5.838, -28.151], [12.745, -4.321, -31.53], [14.28, -7.132, -33.522],[15.508, -5.273, -36.563]]";

    // Vector3D atomic_vector = convert_string_to_vector(atomic_data);
    // // cout << atomic_vector << endl;
    // for (int i = 0; i < atomic_vector.size(); i++) {
    //     for (int j = 0; j < atomic_vector[i].size(); j++) {
    //         cout << atomic_vector[i][j] << " ";
    //     }
    //     cout << endl;
    // }


// Vector3D convert_string_to_vector(string input_string) {
//     replace(input_string.begin(), input_string.end(), '[', ' ');
//     replace(input_string.begin(), input_string.end(), ']', ' ');

//     Vector3D output_vector;

//     std::stringstream ss(input_string);

//     while (ss.good()) {
//         vector<double> vect;
//         for (int i = 0; i < 3; i++) {
//             string substr;
//             getline(ss, substr, ',');
//             substr.erase(remove_if(substr.begin(), substr.end(), ::isspace), substr.end());
//             vect.push_back(stod(substr));
//         }
//         output_vector.push_back(vect);
//     }

//     return output_vector;
// }